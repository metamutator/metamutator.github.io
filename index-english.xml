<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>aksh.ai</title>
<link>https://www.aksh.ai/#category=english</link>
<atom:link href="https://www.aksh.ai/index-english.xml" rel="self" type="application/rss+xml"/>
<description>Designing Strategy Through Data</description>
<generator>quarto-1.4.550</generator>
<lastBuildDate>Thu, 20 Jul 2023 16:00:00 GMT</lastBuildDate>
<item>
  <title>Bonjour Tout Le Monde!</title>
  <dc:creator>Akshay Regulagedda</dc:creator>
  <link>https://www.aksh.ai/posts/hello-world/hello.html</link>
  <description><![CDATA[ 




<p><img src="https://www.aksh.ai/posts/hello-world/hello_world.jpg" class="img-fluid" alt="Hello"> Photo by <a href="https://unsplash.com/@artturijalli?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Artturi Jalli</a> on <a href="https://unsplash.com/photos/g5_rxRjvKmg?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>
<section id="executive-summary" class="level2">
<h2 class="anchored" data-anchor-id="executive-summary">Executive Summary</h2>
<p>At long last, we have finally re-launched a new blog at great expense. I’m writing this in Markdown in Visual Studio Code, but can choose to add in visualisations or AI results through code-chunks. I can even write mathematical equations such as this easily: <img src="https://latex.codecogs.com/png.latex?f(c)=%5Cdfrac%7B1%7D%7Bb%E2%88%92a%7D%E2%88%AB%5Eb_af(x)%5C,dx.%20%5Cnonumber%20"></p>
<p>(That’s the equation for the Mean Value Theorem, if you’re wondering)</p>
<p>When I’m done, I push the changes to Github Pages, which through the magic of Quarto, somehow publishes it for free under my own quirky domain. I control my content fully, and choose to move it anywhere I want to.</p>
<p>Here’s how I did it.</p>
</section>
<section id="the-setup" class="level2">
<h2 class="anchored" data-anchor-id="the-setup">The Setup</h2>
<p>I’ve set this blog up using the <a href="https://quarto.org">Quarto</a> framework, which is a new way of writing documents that are a mix of code and text. It’s like Jupyter Notebooks, but with a lot more flexibility. The official documentation was reasonably clear, but really, the crux was to publish it to <em>Github Pages</em>. Albert Rapp’s <a href="https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html">guide</a> was very helpful in this regard, as was Bea Milz’s <a href="https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/">10 step formulation</a> Some bits over and above Quarto’s official documentation include getting comments (look below), and also setting up a newsletter (to be done). Lots of good content there, won’t be repeating it here. Instead, let me tell you about features and gotchas.</p>
</section>
<section id="the-features" class="level2">
<h2 class="anchored" data-anchor-id="the-features">The Features</h2>
<section id="comments" class="level3">
<h3 class="anchored" data-anchor-id="comments">1. Comments</h3>
<p>I have set up comments using <a href="https://utteranc.es/">Utterances</a>. It’s a free open-source service that uses Github Issues to store comments. You can see the comments on the bottom of this page. Pretty neat, <em>non</em> ?</p>
</section>
<section id="search" class="level3">
<h3 class="anchored" data-anchor-id="search">2. Search</h3>
<p>Just love the built-in search in Quatro. Simple but works.</p>
</section>
<section id="visual-studio-code" class="level3">
<h3 class="anchored" data-anchor-id="visual-studio-code">3. Visual Studio Code</h3>
<p>Now this is mainly for me, but I don’t have to context-switch away from Visual Studio Code just to make a post. In fact, I can even write code in the same document, and it will be executed and the results shown. This also means… I have AI enabled automatically, through GitHub Copilot. Not that it’s helpful, mind you, in fact, for long-form writing, it’s quite annoying. But hey, it exists, and is particularly helpful in all those settings files, and of course, code-chunks.</p>
</section>
<section id="code-chunks" class="level3">
<h3 class="anchored" data-anchor-id="code-chunks">4. Code Chunks</h3>
<p>Need I say more? How cool is this, that I can just write this and it’ll be executed inline?</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World!"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hello World!</code></pre>
</div>
</div>
</section>
<section id="table-of-contents" class="level3">
<h3 class="anchored" data-anchor-id="table-of-contents">5. Table of Contents</h3>
<p>See the nice bar to the right listing down all the sections? That’s the Table of Contents. It’s automatically generated, and is a nice way to navigate through the document.</p>
</section>
<section id="internationalisation" class="level3">
<h3 class="anchored" data-anchor-id="internationalisation">6. Internationalisation</h3>
<p>తెలుగు, తదితర భాషలలో కూడా సునాయాసంగా టపాయించచ్చు! Je peux facilement écrire en français aussi!</p>
</section>
</section>
<section id="the-gotchas" class="level2">
<h2 class="anchored" data-anchor-id="the-gotchas">The Gotchas</h2>
<p>It’s not all roses though, there are a few gotchas too.</p>
<section id="rss-feed" class="level3">
<h3 class="anchored" data-anchor-id="rss-feed"><del>1. RSS Feed</del></h3>
<p><del>The RSS feed somehow <em>should</em> work, but doesn’t. I’m still trying to figure out why.</del> Fixed it.</p>
</section>
<section id="posting-comments" class="level3">
<h3 class="anchored" data-anchor-id="posting-comments">2. Posting Comments</h3>
<p>You need to have a GitHub account to post comments. I’m not sure if that’s a good thing or a bad thing for you; it certainly is a good thing for me, as I can leverage on GitHub’s plumbing to manage comments. It also acts as a sort of gatekeeper for spam, for now at least.</p>
<p>Also, I really really REALLY wanted <a href="https://giscus.app/">Giscus</a> to work, but it doesn’t. Comments on one page show up on all pages. I’m not sure why; presuming it’s a settings thing, but I can’t figure out how to fix it.</p>
<p>Instead, I’m using <a href="https://utteranc.es/">Utterances</a>, which is a free open-source service that uses Github Issues to store comments. Same-same for you, but different for me in that Giscus uses GitHub Discussions and not Issues. Ah well.</p>
</section>
<section id="no-wysiwyg" class="level3">
<h3 class="anchored" data-anchor-id="no-wysiwyg">3. No WYSIWYG</h3>
<p>There’s no WYSIWYG editor, so you have to write in Markdown. I don’t mind it, but you might.</p>
</section>
<section id="executing-python-code-chunks" class="level3">
<h3 class="anchored" data-anchor-id="executing-python-code-chunks">4. Executing Python code-chunks</h3>
<p>Oh boy, this one was a doozy.</p>
<p>So the main attraction for Quarto/ QMD is that you can write code-chunks in any language, and it’ll be executed and the results shown. However, in Python, I typically create a new conda virtual environment for each project, with a limited set of packages for that project. Now, in the Visual Studio Code - Jupyter notebook world, this is crystal-clear; there’s a convenient dropdown to select the environment. But in Quarto, it’s not so clear.</p>
<p>This is made even harder by the fact that the Quarto plug-in for Visual Studio Code pops up an interactive window when you execute a code-chunk. And that window somehow <em>does</em> have a dropdown to select the environment. But hitting Render on the QMD file doesn’t use that selected environment. Instead, you need to hit command/ctrl-shift-p and select the environment there.</p>
<p>It’s all listed in this <a href="https://github.com/quarto-dev/quarto/issues/27">issue</a> raised in August 2022. Some helpful checks there too. If you hit an error reading the following:</p>
<p><code>No module named 'nbformat'</code></p>
<p>.. then it’s very likely that Quarto is referencing the wrong Python executable. On Macs, this is likely to be the flavour that comes with the OS, <em>not</em> Miniconda/ Anaconda or the environment you just chose. You can check on that by running the following in a code-chunk:</p>
<p><code>import sys</code></p>
<p><code>print(sys.executable)</code></p>
<p>If the output (in the render) is not the virtual environment you expect, then you know what the problem is. Hit command/ctrl-shift-p and select the right environment.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>So there you have it. A new blog, with all the bells and whistles, and a few gotchas. I’m sure I’ll find more as I go along, but for now, I’m partying like it’s 1999.</p>


</section>

 ]]></description>
  <category>quarto</category>
  <category>hello-world</category>
  <category>setup</category>
  <category>english</category>
  <guid>https://www.aksh.ai/posts/hello-world/hello.html</guid>
  <pubDate>Thu, 20 Jul 2023 16:00:00 GMT</pubDate>
  <media:content url="https://www.aksh.ai/posts/hello-world/hello_world.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
