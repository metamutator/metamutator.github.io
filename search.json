[
  {
    "objectID": "telugu.html",
    "href": "telugu.html",
    "title": "తెలుగులో టపాలు",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "aksh.ai",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nTaking Delight in the Scripts of Humans\n\n\n10 min\n\n\n\noppenheimer\n\n\nllm\n\n\nai\n\n\nSanskrit\n\n\nbhagavad-gita\n\n\nanthropic\n\n\nlinguistics\n\n\n\nTransliterating Sanskrit verse in various contemporary South Asian and South East Asian scripts.\n\n\n\n22 Aug 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nI am Time, Destroyer of Worlds\n\n\n5 min\n\n\n\noppenheimer\n\n\nllm\n\n\nai\n\n\nSanskrit\n\n\nbhagavad-gita\n\n\nanthropic\n\n\nlinguistics\n\n\n\nFiling for Chapter 11 with AI assistance.\n\n\n\n09 Aug 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPanchanga Tantra: The Magic of the Indic Calendar System\n\n\n27 min\n\n\n\nmathematics\n\n\nastronomy\n\n\ncalendar\n\n\n\n‘Twentieth anniversary edition’ of my undergraduate thesis on the Indic calendar system.\n\n\n\n23 Jul 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBonjour Tout Le Monde!\n\n\n5 min\n\n\n\nquarto\n\n\nhello-world\n\n\nsetup\n\n\nenglish\n\n\n\nIn which we say hello to the world.\n\n\n\n21 Jul 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "archive/bonjour-tout-le-monde/bonjour.html",
    "href": "archive/bonjour-tout-le-monde/bonjour.html",
    "title": "Bonjour Tout Le Monde!",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "archive/bonjour-tout-le-monde/bonjour.html#merriweather",
    "href": "archive/bonjour-tout-le-monde/bonjour.html#merriweather",
    "title": "Bonjour Tout Le Monde!",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nThis is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod &lt;- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds &lt;- dat %&gt;% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit &gt; 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %&gt;% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]"
  },
  {
    "objectID": "archive/bonjour-tout-le-monde/bonjour.html#columns",
    "href": "archive/bonjour-tout-le-monde/bonjour.html#columns",
    "title": "Bonjour Tout Le Monde!",
    "section": "",
    "text": "geom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)"
  },
  {
    "objectID": "archive/bonjour-tout-le-monde/bonjour.html#margin-captions",
    "href": "archive/bonjour-tout-le-monde/bonjour.html#margin-captions",
    "title": "Bonjour Tout Le Monde!",
    "section": "",
    "text": "ggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn’t it?"
  },
  {
    "objectID": "posts/i_am_time/index.html",
    "href": "posts/i_am_time/index.html",
    "title": "I am Time, Destroyer of Worlds",
    "section": "",
    "text": "Figure 1: I am Time: A 19th century painting of Krishna in his viswarūpa. 1"
  },
  {
    "objectID": "posts/i_am_time/index.html#executive-summary",
    "href": "posts/i_am_time/index.html#executive-summary",
    "title": "I am Time, Destroyer of Worlds",
    "section": "Executive Summary",
    "text": "Executive Summary\nYou may have watched in the new Nolan movie, or read it the 2005 biography (Bird and Sherwin 2005) on which the movie is based, or indeed, or have read it in the original interview (Barnett 1949) with Life magazine. Or may be you’ve known it all along. Julius Robert Oppenheimer is famously said to have quoted thought of a quote from the Bhagavad Gitā upon witnessing the first nuclear explosion:\n\nIf the radiance of a thousand suns were to burst at once into the sky, that would be like the splendo[u]r of the mighty one\nNow I am become Death, the shatterer of worlds.\n\nThere’s a lot of scholarship already published on this and indeed Bhagavad Gita in itself. This post doesn’t aim to add anything novel to that discussion, other than as a quick linguistic exploration through AI."
  },
  {
    "objectID": "posts/i_am_time/index.html#the-original-verses",
    "href": "posts/i_am_time/index.html#the-original-verses",
    "title": "I am Time, Destroyer of Worlds",
    "section": "The Original Verses",
    "text": "The Original Verses\nOppenheimer was translating Slokas 12 and 32 in Chapter 11 of the Gita. The verses read as follows in the original Sanskrit:\nChapter 11, Verse 12:\ndivi sūrya-sahasrasya bhaved yugapad utthitā\nyadi bhāḥ sadṛiśhī sā syād bhāsas tasya mahātmanaḥ\nChapter 11, Verse 32:\nśhrī-bhagavān uvācha:\n   kālósmi loka-kṣhaya-kṛit pravṛiddho\n   lokān samāhartum iha pravṛittaḥ\n   ṛitépi tvāṁ na bhaviṣhyanti sarve\n   yévasthitāḥ pratyanīkeṣhu yodhāḥ\nHistorically, one learns classical Sanskrit (and classical Telugu) poetry through both a prati padārtham (word-by-word) translation, and a bhāvam (prose translation). Let’s try both here with AI."
  },
  {
    "objectID": "posts/i_am_time/index.html#the-meaning",
    "href": "posts/i_am_time/index.html#the-meaning",
    "title": "I am Time, Destroyer of Worlds",
    "section": "The Meaning",
    "text": "The Meaning\n\nCalling Claude 2\nThe advent of LLM’s now mean that you can write a quick function in Python that can take in any verse in Sanskrit and return both the prati padārtham and the bhāvam in JSON.\nHere’s how.\n\n\nCode\ndef generate_sloka_meaning(sloka):\n    prompt = f\"\"\"\n    {HUMAN_PROMPT} Consider the following verse in Sanskrit enclosed in single quotes. Please give a JSON response with the following key/ value pairs:\n    1. 'prati padartham': Aword for word translation in English in the form of a markdown table. \n    The table should have the following columns: Word in Devanagari script, Word in Telugu script, Word in Roman Script, English Translation.\n    Return the table alone as the value.\n    2. 'bhavam': The overall meaning of the verse in English sentences. Return the meaning alone as the value.\n\n    Please give the response in the following JSON format: {'{\"prati padartham\": \"table\", \"bhavam\": \"meaning\"}'} This is important: do not give anything beyond the JSON response.\n    The verse: '{sloka}'\n    {AI_PROMPT} Can I check through my answer to ensure I have not missed anything?\n    {HUMAN_PROMPT} Yes, please do. Make sure you have not missed anything. Particularly check if you're outputting the right script in the right column. \n    {AI_PROMPT}\n            \"\"\"\n    anthropic = Anthropic()\n    completion = anthropic.completions.create(\n        model=\"claude-2\",\n        max_tokens_to_sample=40000,\n        prompt=prompt,\n    )\n    return completion.completion\n\ndef extract_prati_padartham(sloka_meaning):\n    #extract json value with the key 'prati padartham'\n    return json.loads(sloka_meaning)[\"prati padartham\"]\n\ndef extract_bhavam(sloka_meaning):\n    #extract json value with the key 'bhavam'\n    return json.loads(sloka_meaning)[\"bhavam\"]\n\n\nThe function generate_sloka_meaning calls Claude 2 and gets it to generate a prati padartham and bhavam. The former is returned as a Markdown table, while the latter is plain text. We also got Claude 2 to check through the response before returning it to us (per suggestion in Anthropic’s docs). This is because it did not generate the full meaning on some executions.\nLet’s now input both verses and see what Claude 2 generates for us.\n\n\nCode\nverses = {\n    \"11.12\": \"divi sūryasahasrasya bhaved yugapad utthitā\\nyadi bhāḥ sadṛśī sā syād bhāsas tasya mahātmanaḥ\",\n    \"11.32\": \"śhrī-bhagavān uvācha\\nkālo’smi loka-kṣaya-kṛt pravṛddho\\nlokan samāhartum iha pravṛttaḥ\\nṛte ’pi tvāṁ na bhaviṣyanti sarve\\nye ’vasthitāḥ pratyanīkeṣu yodhāḥ\",\n}\n\n# for each verse, generate the meaning\nsloka_meanings = {}\nfor verse in verses:\n    sloka_meanings[verse] = generate_sloka_meaning(verses[verse])\n\n\n\n\nResults\nThis is what we see for the two verses that Oppenheimer quoted:\n\n\n\n\nTable 1: Word-for-word translation of Verse 11.12\n\n\n\n\n\n\n\n\nWord in Devanagari\nWord in Telugu\nWord in Roman\nEnglish Translation\n\n\n\n\nदिवि\nదివి\ndivi\nin the sky\n\n\nसूर्यसहस्रस्य\nసూర్యసహస్రస్య\nsūryasahasrasya\nof thousands of suns\n\n\nभवेत्\nభవేత్\nbhavet\nwould be\n\n\nयुगपत्\nయుగపత్\nyugapat\nsimultaneously\n\n\nउत्थिता\nఉత్థితా\nutthitā\nrisen\n\n\nयदि\nయది\nyadi\nif\n\n\nभाः\nభాः\nbhāḥ\nlight\n\n\nसदृशी\nసదృశీ\nsadṛśī\nsimilar\n\n\nसा\nసా\nsā\nthat\n\n\nस्यात्\nస్యాత్\nsyāt\nwould be\n\n\nभासस्\nభాసస్\nbhāsas\nthe light\n\n\nतस्य\nతస్య\ntasya\nhis\n\n\nमहात्मनः\nమహాత్మనః\nmahātmanaḥ\nof the noble one\n\n\n\n\n\n\n\n\n\n\nTable 2: Word-for-word translation of Verse 11.32\n\n\n\n\n\n\n\n\nWord in Devanagari\nWord in Telugu\nWord in IAST\nEnglish Translation\n\n\n\n\nश्री-भगवान्\nశ్రీ-భగవాన్\nśrī-bhagavān\nLord Krishna\n\n\nउवाच\nఉవాచ\nuvāca\nsaid\n\n\nकालः\nకాలః\nkālaḥ\ntime\n\n\nअस्मि\nఅస్మి\nasmi\nI am\n\n\nलोक-क्षय-कृत्\nలోక-క్షయ-కృత్\nloka-kṣaya-kṛt\nthe destroyer of the worlds\n\n\nप्रवृद्धः\nప్రవృద్ధః\npravṛddhaḥ\ngrown\n\n\nलोकान्\nలోకాన్\nlokān\nthe worlds\n\n\nसमाहर्तुम्\nసమాహర్తుమ్\nsamāhartum\nto destroy\n\n\nइह\nఇహ\niha\nhere\n\n\nप्रवृत्तः\nప్రవృత్తః\npravṛttaḥ\nengaged\n\n\nऋते\nఋతే\nṛte\nwithout\n\n\nअपि\nఅపి\napi\neven\n\n\nत्वाम्\nత్వామ్\ntvām\nyou\n\n\nन\nన\nna\nnot\n\n\nभविष्यन्ति\nభవిష్యన్తి\nbhaviṣyanti\nwill be\n\n\nसर्वे\nసర్వే\nsarve\nall\n\n\nये\nయే\nye\nwho\n\n\nअवस्थिताः\nఅవస్థితాః\navasthitāḥ\narrayed\n\n\nप्रत्यनीकेषु\nప్రత్యనీకేషు\npratyanīkeṣu\non the opposing\n\n\nयोधाः\nయోధాః\nyodhāḥ\nwarriors\n\n\n\n\n\n\n( Do note that Claude 2 has gotten a few Roman transliterations wrong. )\n\n\nHere are the meanings of both verses:\n\n11.12: If thousands of suns were to rise simultaneously in the sky, that brilliance would be similar to the radiance of that noble soul.\n11.32: In this verse, Lord Krishna reveals that He is time, the destroyer of worlds. He says that the time has come for Him to destroy the worlds, and He has set out to do so. He declares that even without you (Arjuna), all the warriors arrayed on the opposing side will cease to exist."
  },
  {
    "objectID": "posts/i_am_time/index.html#analysis",
    "href": "posts/i_am_time/index.html#analysis",
    "title": "I am Time, Destroyer of Worlds",
    "section": "Analysis",
    "text": "Analysis\nLet’s compare the versions one by one.\n\n\n\n\nTable 3: Comparing meanings for both verses\n\n\n\n\n\n\n\nVerse\nVersion By\nMeaning\n\n\n\n\n11.12\nOppenheimer\nIf the radiance of a thousand suns were to burst at once into the sky, that would be like the splendo[u]r of the mighty one\n\n\n11.12\nClaude 2\nIf thousands of suns were to rise in the sky simultaneously, that light would be similar to the light of that noble one.\n\n\n11.32\nOppenheimer\nNow I am become Death, the shatterer of worlds.\n\n\n11.32\nClaude 2\nLord Krishna said: I am time, the destroyer of worlds, fully grown for destroying the worlds. Now I am engaged here to destroy them. Even without you, all the warriors arrayed on the opposing side shall not exist.\n\n\n\n\n\n\nOne may note the following:\n\n1. Light from a Noble or Mighty One\nOppenheimer’s translation focusses on bursting of light from a thousand suns, like in a nuclear explosion, while Claude 2’s translation focuses on thousands of suns rising in the sky (“utthitā”). Oppenheimer translated mahātma as “mighty one”, while the Claude 2 translation renders it as “noble one”.\nWhich is to say: while in Oppenheimer’s translation, the narrator is in awe of a sudden display of immense power, in the latter, the narrator also ascribes a sense of nobility to a gentle - if less scary - display of power.\n\n\n2. Death or Time\nOppenheimer translated kālaḥ as “Death”, while the Claude 2 translation rendered it as “Time”. A quick search across multiple Sanskrit dictionaries suggests that kālaḥ can indeed mean both “Death” and “Time”, but the latter is more common.\nIn particular, Monier Williams 2nd Edition (1899) tried to reconcile both meanings by suggesting that kālaḥ could mean “death by age”, or time as an entity that “destroys all things” (Bharati 2023)\nTime has been worshipped as entity in Hinduism since the Vedic Era. Rig Veda Mandala 10, Sukta 190 suggests Time originated first from the Great Ocean in the sky, and only then did the Sun and the Moon come into existence:\n\n\nసముద్రాద్ అర్ణవాద్ అధి సంవత్సరో అజయాతఅహో రాత్రాణి విదధద్ విశ్వస్య మిషతో వశీసూర్యా చంద్రమసో ధాతా యథాపూర్వం అకల్పయత్దివం చ ప్రథివీంచ అంతరిక్షం ఆతో స్వాహః\n\n\nYes, of course, this too needs to be translated with the function we wrote above.\n\n\n\n\nTable 4: Claude 2’s translation of Rig Veda Mandala 10 Sukta 190\n\n\n\n\n\n\n\n\nWord in Devanagari\nWord in Telugu\nWord in Roman\nEnglish Translation\n\n\n\n\nसमुद्रात्\nసముద్రాద్\nsamudrāt\nfrom the ocean\n\n\nअर्णवात्\nఅర్ణవాద్\narṇavāt\nand from the sky\n\n\nअधि\nఅధి\nadhi\nabove\n\n\nसंवत्सर:\nసంవత్సరో\nsaṃvatsaro\nyear\n\n\nअजयात्\nఅజయాత\najayāt\nunceasingly\n\n\nअहो\nఅహో\naho\nO!\n\n\nरात्राणि\nరాత్రాణి\nrātrāṇi\nnights\n\n\nविदधत्\nవిదధద్\nvidadhat\nplacing\n\n\nविश्वस्य\nవిశ్వస్య\nviśvasya\nof the universe\n\n\nमिषत:\nమిషతో\nmiṣataḥ\nproperly\n\n\nवशी\nవశీ\nvaśī\nthe controller\n\n\nसूर्या:\nసూర్యా\nsūryāḥ\nsun\n\n\nचन्द्रमस:\nచంద్రమసో\ncandramasaḥ\nand moon\n\n\nधाता\nధాతా\ndhātā\nplacing\n\n\nयथापूर्वम्\nయథాపూర్వం\nyathāpūrvam\nas before\n\n\nअकल्पयत्\nఅకల్పయత్\nakalpayat\nimagined\n\n\nदिवम्\nదివం\ndivam\nheaven\n\n\nच\nచ\nca\nand\n\n\nपृथिवीम्\nప్రథివీంచ\npṛthivīṃ\nearth\n\n\nच\nచ\nca\nand\n\n\nअन्तरिक्षम्\nఅంతరిక్షం\nantarikṣam\nspace\n\n\nआत:\nఆతో\nātaḥ\nthen\n\n\nस्वा:\nస్వాహః\nsvāḥ\nhimself\n\n\n\n\n\n\nMeaning:\n\nThe verse describes how the creator (Brahma), after bringing forth the universe consisting of the sky, heavens, earth and space between them, then created the regulating principles exemplified by the sun and moon, which go on continuously, year after year, placing day and night properly in their assigned places just as before.\n\n\n\nNote that the Claude 2 translation is non-deterministic; each execution has produced a different result.\nTime is one of the four primary forms of Vishnu per the Vishnu Purana, the other three being matter (pradhāna), visible substance (vyakta), and spirit (purusha) (via Wikipedia)\nIn that sense, Krishna telling Arjuna that He is Time is not to say he will destroy the world, but that both creation and destruction are part of the same process, and that Krishna is the source of both."
  },
  {
    "objectID": "posts/i_am_time/index.html#conclusion",
    "href": "posts/i_am_time/index.html#conclusion",
    "title": "I am Time, Destroyer of Worlds",
    "section": "Conclusion",
    "text": "Conclusion\nThere is no single correct interpretation of the Gita or any other Sanskrit verse. The context of the narrator matters as much as the words. Oppenheimer used verses from the Gita to describe his feelings about a scary new power that could bring about destruction of the world. Death, clearly, was on his mind. Another narrator (me) in a different context would interpret the same verses differently. These could very well be describing a more benevolent power over which one has no agency, but one that encompasses not just destruction but also creation.\nA quick lexical analysis through the traditional approach of seeing a word-for-word translation and then a sentence-wise translation can assist in this regard. Whilst this was traditionally done by hand, now you can script it out in Python by relying on LLM’s. However, output from LLM’s can be subjective too - biased by training, and also non-deterministic. You still need to think this through for yourself."
  },
  {
    "objectID": "posts/i_am_time/index.html#footnotes",
    "href": "posts/i_am_time/index.html#footnotes",
    "title": "I am Time, Destroyer of Worlds",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe image is taken from V&A’s website. It used to be shown in the India collection along with other works of art the British Raj stole from the sub-continent, but now is no longer on public display. Infuriatingly, V&A somehow asserts copyright and therefore conditions over an image of this 200-year-old painting.↩︎"
  },
  {
    "objectID": "posts/hello-world/hello.html",
    "href": "posts/hello-world/hello.html",
    "title": "Bonjour Tout Le Monde!",
    "section": "",
    "text": "Photo by Artturi Jalli on Unsplash"
  },
  {
    "objectID": "posts/hello-world/hello.html#executive-summary",
    "href": "posts/hello-world/hello.html#executive-summary",
    "title": "Bonjour Tout Le Monde!",
    "section": "Executive Summary",
    "text": "Executive Summary\nAt long last, we have finally re-launched a new blog at great expense. I’m writing this in Markdown in Visual Studio Code, but can choose to add in visualisations or AI results through code-chunks. I can even write mathematical equations such as this easily: \\[f(c)=\\dfrac{1}{b−a}∫^b_af(x)\\,dx. \\nonumber \\]\n(That’s the equation for the Mean Value Theorem, if you’re wondering)\nWhen I’m done, I push the changes to Github Pages, which through the magic of Quarto, somehow publishes it for free under my own quirky domain. I control my content fully, and choose to move it anywhere I want to.\nHere’s how I did it."
  },
  {
    "objectID": "posts/hello-world/hello.html#the-setup",
    "href": "posts/hello-world/hello.html#the-setup",
    "title": "Bonjour Tout Le Monde!",
    "section": "The Setup",
    "text": "The Setup\nI’ve set this blog up using the Quarto framework, which is a new way of writing documents that are a mix of code and text. It’s like Jupyter Notebooks, but with a lot more flexibility. The official documentation was reasonably clear, but really, the crux was to publish it to Github Pages. Albert Rapp’s guide was very helpful in this regard, as was Bea Milz’s 10 step formulation Some bits over and above Quarto’s official documentation include getting comments (look below), and also setting up a newsletter (to be done). Lots of good content there, won’t be repeating it here. Instead, let me tell you about features and gotchas."
  },
  {
    "objectID": "posts/hello-world/hello.html#the-features",
    "href": "posts/hello-world/hello.html#the-features",
    "title": "Bonjour Tout Le Monde!",
    "section": "The Features",
    "text": "The Features\n\n1. Comments\nI have set up comments using Utterances. It’s a free open-source service that uses Github Issues to store comments. You can see the comments on the bottom of this page. Pretty neat, non ?\n\n\n2. Search\nJust love the built-in search in Quatro. Simple but works.\n\n\n3. Visual Studio Code\nNow this is mainly for me, but I don’t have to context-switch away from Visual Studio Code just to make a post. In fact, I can even write code in the same document, and it will be executed and the results shown. This also means… I have AI enabled automatically, through GitHub Copilot. Not that it’s helpful, mind you, in fact, for long-form writing, it’s quite annoying. But hey, it exists, and is particularly helpful in all those settings files, and of course, code-chunks.\n\n\n4. Code Chunks\nNeed I say more? How cool is this, that I can just write this and it’ll be executed inline?\n\nprint(\"Hello World!\")\n\nHello World!\n\n\n\n\n5. Table of Contents\nSee the nice bar to the right listing down all the sections? That’s the Table of Contents. It’s automatically generated, and is a nice way to navigate through the document.\n\n\n6. Internationalisation\nతెలుగు, తదితర భాషలలో కూడా సునాయాసంగా టపాయించచ్చు! Je peux facilement écrire en français aussi!"
  },
  {
    "objectID": "posts/hello-world/hello.html#the-gotchas",
    "href": "posts/hello-world/hello.html#the-gotchas",
    "title": "Bonjour Tout Le Monde!",
    "section": "The Gotchas",
    "text": "The Gotchas\nIt’s not all roses though, there are a few gotchas too.\n\n1. RSS Feed\nThe RSS feed somehow should work, but doesn’t. I’m still trying to figure out why. Fixed it.\n\n\n2. Posting Comments\nYou need to have a GitHub account to post comments. I’m not sure if that’s a good thing or a bad thing for you; it certainly is a good thing for me, as I can leverage on GitHub’s plumbing to manage comments. It also acts as a sort of gatekeeper for spam, for now at least.\nAlso, I really really REALLY wanted Giscus to work, but it doesn’t. Comments on one page show up on all pages. I’m not sure why; presuming it’s a settings thing, but I can’t figure out how to fix it.\nInstead, I’m using Utterances, which is a free open-source service that uses Github Issues to store comments. Same-same for you, but different for me in that Giscus uses GitHub Discussions and not Issues. Ah well.\n\n\n3. No WYSIWYG\nThere’s no WYSIWYG editor, so you have to write in Markdown. I don’t mind it, but you might.\n\n\n4. Executing Python code-chunks\nOh boy, this one was a doozy.\nSo the main attraction for Quarto/ QMD is that you can write code-chunks in any language, and it’ll be executed and the results shown. However, in Python, I typically create a new conda virtual environment for each project, with a limited set of packages for that project. Now, in the Visual Studio Code - Jupyter notebook world, this is crystal-clear; there’s a convenient dropdown to select the environment. But in Quarto, it’s not so clear.\nThis is made even harder by the fact that the Quarto plug-in for Visual Studio Code pops up an interactive window when you execute a code-chunk. And that window somehow does have a dropdown to select the environment. But hitting Render on the QMD file doesn’t use that selected environment. Instead, you need to hit command/ctrl-shift-p and select the environment there.\nIt’s all listed in this issue raised in August 2022. Some helpful checks there too. If you hit an error reading the following:\nNo module named 'nbformat'\n.. then it’s very likely that Quarto is referencing the wrong Python executable. On Macs, this is likely to be the flavour that comes with the OS, not Miniconda/ Anaconda or the environment you just chose. You can check on that by running the following in a code-chunk:\nimport sys\nprint(sys.executable)\nIf the output (in the render) is not the virtual environment you expect, then you know what the problem is. Hit command/ctrl-shift-p and select the right environment."
  },
  {
    "objectID": "posts/hello-world/hello.html#conclusion",
    "href": "posts/hello-world/hello.html#conclusion",
    "title": "Bonjour Tout Le Monde!",
    "section": "Conclusion",
    "text": "Conclusion\nSo there you have it. A new blog, with all the bells and whistles, and a few gotchas. I’m sure I’ll find more as I go along, but for now, I’m partying like it’s 1999."
  },
  {
    "objectID": "posts/brahmi-scripts/index.html",
    "href": "posts/brahmi-scripts/index.html",
    "title": "Taking Delight in the Scripts of Humans",
    "section": "",
    "text": "Figure 1: Sanskrit verse even here: Sun rise at Angkor Wat. Photo by Sebastian Latorre on Unsplash"
  },
  {
    "objectID": "posts/brahmi-scripts/index.html#sanskrit-the-language",
    "href": "posts/brahmi-scripts/index.html#sanskrit-the-language",
    "title": "Taking Delight in the Scripts of Humans",
    "section": "Sanskrit: The Language",
    "text": "Sanskrit: The Language\nI haven’t had a formal education in Sanskrit. But it is a liturgical language that I chant in every day, not just for Hindu slokas from the Gitā and the Vedas, but also for Buddhist sutras such as the Prajñaparamita Hrdaya Sūtra. A lot of Sanskrit words have made their way into contemporary languages in both South and South East Asia, so I do understand many words.\n\nSame-same but different\nBut those familiar waters can sometimes be treacherous. The same word could have different meanings in Sanskrit and other languages. False Friends is a Thing, more so in Indic languages than in other language families. I often need to rely on guard-rails such as Sanskrit Dictionary Collections to keep me safe.\nThen there are sandhi’s, liasons between words to form compound words. Whilst the individual word may be understandable, the compound word could feel and sound new; you will need to know how the sandhi has been formed in order to untangle the compound word into its constituents.\n\n\nSame-same not same as sama-sama\nSanskrit has been historically written in range of scripts, down from the earliest Brahmi and Kharosthi scripts, to more contemporary scripts across Asia.\nHere’s a good example of how it all intersects. Consider this quote from Kālidāsa mentioned in Wikipedia, written in various Asian scripts:\n\n\n\nFigure 2: ‘May Śiva bless those who take delight in the language of gods’ - Kālidāsa. (FromWikipedia)\n\n\nSanskrit is written in each of these scripts for liturgical needs in South and South East Asia. The first word is easily understood: it clearly refers to Siva, one of the gods in the Hindu pantheon. The second word is also easily understood: it’s clearly a conjugation of the word raksha or to protect. But wait: how did to protect become bless?\nIt gets more difficult with the next word, a multi-letter monster in every script mentioned in the graphic. It is a compound word: among others, words meaning ‘language’, ‘god’ and ‘delight’ have been somehow strung together to form a single word. This is where it starts to become complex.\n\n\nHaksara Wrehastra: Conjunct Letters\nFor, untangling conjunct words is not just a matter of giving the right amount of spaces. Most Brahmi-originated scripts have conjunct letters, complex rules where letters may be combined in certain combinations to form new letters. 36 consonants can be combined to form 1296 two-letter combinations in Sanskrit, but that is not all. Each of these combinations can be combined with 16 vowels to form even more complex conjuncts. There is no grammatical limit to the number of letters you can combine. At the most extreme, the word कार्त्स्न्य (“entirety”) consists of a five-letter conjunct, र्त्स्न्य (Stiehl 2017).\nWhilst I can read many of the scripts listed in Figure 2, I find it easier break conjunct vowels and therefore words into their constituent parts in Telugu script. But that may not be your experience; perhaps you’re used to reading about Ghatōtgacha’s exploits in Balinese script. Which brings us to our first computational challenge: can we transliterate a Sanskrit string into a script of our choice?"
  },
  {
    "objectID": "posts/brahmi-scripts/index.html#writing-sanskrit",
    "href": "posts/brahmi-scripts/index.html#writing-sanskrit",
    "title": "Taking Delight in the Scripts of Humans",
    "section": "1. Writing Sanskrit",
    "text": "1. Writing Sanskrit\n\n1.1 Methods for Transliteration\n\n\n\n\n\n\nNote\n\n\n\nTransliteration is to convert a string from one script to another without changing the word. This is different from translation, which is to convert a string from one language to another.\n\n\nA naive suggestion could be that an LLM could draft us a quick method in transliterate Telugu strings to Sanskrit. We tried to get Anthropic Claude 2 to do just that:\nimport { Observable } from 'observable-fns'\n\nconst teluguToDevanagari = Observable.create((teluguText) =&gt; {\n\n  const mappings = {\n    'అ':'अ', 'ఆ':'आ', 'ఇ':'इ', 'ఈ':'ई', 'ఉ':'उ', \n    'ఊ':'ऊ', 'ఋ':'ऋ', 'ఌ':'ऌ', 'ఎ':'ए', 'ఏ':'ऐ', \n    'ఐ':'ऑ', 'ఒ':'ओ', 'ఓ':'औ', 'ఔ':'अउ',\n    // ...add remaining mappings\n  }\n\n  let devanagariText = ''\n\n  for(let i=0; i&lt;teluguText.length; i++) {\n    if(mappings.hasOwnProperty(teluguText[i])) {\n      devanagariText += mappings[teluguText[i]]\n    } else {\n      devanagariText += teluguText[i] \n    }\n  }\n\n  return devanagariText\n\n})\n\nexport { teluguToDevanagari }\nThis obviously doesn’t work.\nFor one, Claude didn’t complete the mappings constant, and instead, provided a lazy // ...add remaining mappings comment, which isn’t helpful. For another, this approach won’t work with conjunct vowels at all, unless you list every single one of the combination there is.\nWe tried again, this time asking for it to be in Python:\n\n\nCode\ntelugu_ranges = [\n    ('0C00', '0C7F'), # Telugu\n    ('0C80', '0CFF'), # Telugu Supplementary\n] \n\ndevanagari_ranges = [\n    ('0900', '097F'), # Devanagari\n    ('A8E0', 'A8FF'), # Devanagari Extended\n]\n\ntelugu_to_devanagari_map = {}\n\nfor start, end in telugu_ranges:\n    for char in range(int(start, base=16), int(end, base=16)+1):\n        telugu_char = chr(char)\n        devanagari_char = unicodedata.normalize('NFKC', telugu_char)\n        if devanagari_char in devanagari_ranges:\n            telugu_to_devanagari_map[telugu_char] = devanagari_char\n\ndef transliterate(text):\n    return ''.join([telugu_to_devanagari_map.get(char, char) for char in text])\n\n\nExcept that… this doesn’t work either. Here’s what happens when we execute the function:\n\nprint(transliterate(\"అందరికీ నమస్కారం\"))\n\nఅందరికీ నమస్కారం\n\n\n… which is exactly the same text as the input. I asked Claude what the problem was, and to its credit, it did identify the error: unicodedata.normalize('NFKC') doesn’t convert from the Telugu character-set to Devanagari.\nBut it didn’t fix the error directly. Only after a few rounds of hallucinations and corrections, did we arrive at this version, where we offset the Telugu character-set by 0x0900 - 0x0C00, which is the difference between the Devanagari and Telugu character-sets:\n\n\nCode\ndef transliterate(text):\n  \n  devanagari_offset = 0x0900 - 0x0C00\n  \n  output = \"\"\n  for char in text:\n    char_code = ord(char)\n    \n    if 0x0C00 &lt;= char_code &lt;= 0x0CFF:\n      dev_code = char_code + devanagari_offset\n      output += chr(dev_code)\n    else:\n      output += char\n        \n  return output\n\n\nLet’s run this method against a few examples:\n\nunit_tests = [\"అందరికీ నమస్కారం\", # \"Hello world\" in Telugu\n                \"శివో రక్షతు గీర్వాణభాషారసాస్వాదతత్పరాన్\", #The Kalidasa quote above\n                \"యెలహంక\" # See below\n            ]\n#loop through the unit tests\nprint(*[transliterate(test) for test in unit_tests], sep='\\n')\n\nअंदरिकी नमस्कारं\nशिवो रक्षतु गीर्वाणभाषारसास्वादतत्परान्\nयॆलहंक\n\n\nThese work! A key point here is that you should not trust output from LLM’s to work blindly; you must test and validate them, not just with unit-tests, but also with real-world examples. We’ll come back to this point again soon.\nA linguistic point in our “unit-tests”. The last example there, యెలహంక, is the Telugu spelling of a Bangalore suburb, also written in Kannada as ಯೇಲಹಂಕ. Transliterating Kannada to Telugu is quite straightforward, as was transliterating to Sanskrit (Devanagari) as येलहंक. But if you read the Devanagari version with Hindi pronunciation in mind, you’ll end up reading it as ‘Yelhank’. That’s incorrect; it should be read as ‘Yelahanka’. This is a good example of False Friends among South Asian languages; Hindi and Sanskrit may be written in the same script, Devanagari, but are to be pronounced differently.\nBut really, this method needs to be generalized for any South (East) Asian script to any other (whilst noting the potential for False Friends). Let’s expand the method to include Unicode ranges for all scripts.\n\n\nCode\nscript_unicode_ranges = {\n    #north\n    'assamese': [(0x0980, 0x09FF)],\n    'bengali': [(0x0980, 0x09FF)],\n    'devanagari': [(0x0900, 0x097F), (0xA8E0, 0xA8FF)],\n    'gujarati': [(0x0A80, 0x0AFF)],\n    'gurmukhi': [(0x0A00, 0x0A7F)],  \n    'oriya': [(0x0B00, 0x0B7F)],\n    'tibetan': [(0x0F00, 0x0FFF)],\n    #south\n    'tamil': [(0x0B80, 0x0BFF)],\n    'telugu': [(0x0C00, 0x0C7F), (0x0C80, 0x0CFF)],\n    'kannada': [(0x0C80, 0x0CFF)],\n    'malayalam': [(0x0D00, 0x0D7F)],\n    'sinhala': [(0x0D80, 0x0DFF)],\n    #SE Asia mainland\n    'thai': [(0x0E00, 0x0E7F)],\n    'lao': [(0x0E80, 0x0EFF)],\n    'myanmar': [(0x1000, 0x109F)],\n    'khmer': [(0x1780, 0x17FF), (0x19E0, 0x19FF)],\n    #SE Asia maritime\n    'balinese': [(0x1B00, 0x1B7F)],\n    'javanese': [(0xA980, 0xA9DF)],\n    'sundanese': [(0x1B80, 0x1BBF)]\n}\n# write script_unicode_ranges to a file\nwith open('script_unicode_ranges.json', 'w') as fp:\n    json.dump(script_unicode_ranges, fp)\n\ndef transliterate(text, source_script, target_script):\n  source_range = script_unicode_ranges[source_script]\n  target_range = script_unicode_ranges[target_script]\n\n  output = \"\"\n  for char in text:\n   \n    source_char_code = ord(char)\n    \n    if in_range(source_char_code, source_range):\n       target_char_code = map_to_target(source_char_code, source_range, target_range)\n       if target_char_code != 0xFFFD:\n        output += chr(target_char_code)\n    else:\n       output += char\n       \n  return output\n\ndef in_range(char_code, ranges):\n    return any([start &lt;= char_code &lt;= end for start, end in ranges])\n\ndef map_to_target(source_char_code, source_range, target_range):\n\n  # Calculate target code point\n  target_char_code = source_char_code + (target_range[0][0] - source_range[0][0])\n\n  # Check if it is an assigned Unicode character\n  if (unicodedata.category(chr(target_char_code)) != 'Cn'):\n    return target_char_code \n\n  # If not, map to unspecified character code point\n  return 0xFFFD\n\n\nQuite a few pieces happening in there. To start with, whilst Brahmi-based scripts are similar to each other, they aren’t same ; for instance, the Bengali script does not have a letter equivalent to the Telugu letter వ, whilst Devanagari and other southern and western scripts do. So we have a check to see if the mapped character is a valid Unicode character; if not, we map it to the Unicode replacement character, 0xFFFD.\nLet’s first repeat our “unit-tests”.\n\n#print transliterate for all unit_tests\nprint(*[transliterate(test, 'telugu', 'devanagari') for test in unit_tests], sep='\\n')\n\nअंदरिकी नमस्कारं\nशिवो रक्षतु गीर्वाणभाषारसास्वादतत्परान्\nयॆलहंक\n\n\nThese work, but let’s try to the Kālidāsa quote with the scripts in Figure 2.\n\n\nCode\nkalidasa_quote = unit_tests[1]\n#iterate through keys in script_unicode_ranges\nscripts = [script for script in script_unicode_ranges.keys() if script not in ['devanagari', 'telugu']]\ntable_row_list = [f\"{script}| {transliterate(kalidasa_quote, 'telugu', script)}\" for script in script_unicode_ranges.keys()]\ntable_row_text = \"|\\n\".join(table_row_list)\ndisplay_markdown(f\"| Script | Transliteration |\\n| --- | --- |\\n{table_row_text}\", raw=True)\n\n\n\n\nTable 1: Recreated List of Scripts showing the Kalidasa quote\n\n\nScript\nTransliteration\n\n\n\n\nassamese\nশিো রক্ষতু গীর্াণভাষারসাস্াদতত্পরান্\n\n\nbengali\nশিো রক্ষতু গীর্াণভাষারসাস্াদতত্পরান্\n\n\ndevanagari\nशिवो रक्षतु गीर्वाणभाषारसास्वादतत्परान्\n\n\ngujarati\nશિવો રક્ષતુ ગીર્વાણભાષારસાસ્વાદતત્પરાન્\n\n\ngurmukhi\nਸ਼ਿਵੋ ਰਕ੍ਤੁ ਗੀਰ੍ਵਾਣਭਾਾਰਸਾਸ੍ਵਾਦਤਤ੍ਪਰਾਨ੍\n\n\noriya\nଶିଵୋ ରକ୍ଷତୁ ଗୀର୍ଵାଣଭାଷାରସାସ୍ଵାଦତତ୍ପରାନ୍\n\n\ntibetan\n༶༿༵ཋ ༰༕ཌྷ༷༤ཁ ༗ཀ༰ཌྷ༵༾༣༭༾༷༾༰༸༾༸ཌྷ༵༾༦༤༤ཌྷ༪༰༾༨ཌྷ\n\n\ntamil\nஶிவோ ரக்ஷது ீர்வாணாஷாரஸாஸ்வாதத்பராந்\n\n\ntelugu\nశివో రక్షతు గీర్వాణభాషారసాస్వాదతత్పరాన్\n\n\nkannada\nಶಿವೋ ರಕ್ಷತು ಗೀರ್ವಾಣಭಾಷಾರಸಾಸ್ವಾದತತ್ಪರಾನ್\n\n\nmalayalam\nശിവോ രക്ഷതു ഗീര്വാണഭാഷാരസാസ്വാദതത്പരാന്\n\n\nsinhala\nබඵ ධඕභඤශ වධඵඣතභධමමඵඦඤඤඪධඨ\n\n\nthai\nึ฿ี๋ ะตํืฤแ ทเะํีรอืะุุํีฦฤฤํสะศํ\n\n\nlao\nຶີ໋ ະຕໍືແ ທເະໍີຣອືະຸຸໍີໍສະຨໍ\n\n\nmyanmar\nံဿဵ။ ူပ၍့ဤ၁ ဗ၀ူ၍ဵှဣိှ့ှူးှး၍ဵှဦဤဤ၍ဪူှဨ၍\n\n\nkhmer\nាឿ឵់ ឰផ៍ិឤេ ភៀឰ៍឵ើឣឭើិើឰីើី៍឵ើឦឤឤ៍ឪឰើឨ៍\n\n\nbalinese\nᬶᭁᭋ ᬰᬕᬷᬤᭁ ᬗᭀᬰᬵᬾᬣᬭᬾᬷᬾᬰᬸᬾᬸᬵᬾᬦᬤᬤᬪᬰᬾᬨ\n\n\njavanese\nꦶꦿꦵ꧋ ꦰꦕ꧍ꦷꦤ꧁ ꦗ꧀ꦰ꧍ꦵꦾꦣꦭꦾꦷꦾꦰꦸꦾꦸ꧍ꦵꦾꦦꦤꦤ꧍ꦪꦰꦾꦨ꧍\n\n\nsundanese\n᮶ᮿ᮵ᯋ ᮰ᮕᯍ᮷ᮤᯁ ᮗᯀ᮰ᯍ᮵ᮾᮣᮭᮾ᮷ᮾ᮰᮸ᮾ᮸ᯍ᮵ᮾᮦᮤᮤᯍ᮪᮰ᮾᮨᯍ\n\n\n\n\n\n\nThe approach seems to work for some South Asian scripts, but didn’t for Assamese, Bengali, Tamil, Tibetan or the South East Asian scripts or Tibetan. Some additional characters (zero-width joiners, and vowel diatrical marks, among others) were rendered there. One reason could be because some of the rendered glyphs may not map one-to-one. We will come back to those in a later post. I also have no way of knowing whether it is accurate for Oriya or Sinhala. If you read either, please let me know in the comments if the transliteration is accurate.\n\n\n1.2 Next Steps: Trying it Out\nIn a subsequent post, I will share this out via either Observable.js or by somehow getting the Python methods to work on the web (mostly via Gradio, perhaps). We will also investigate further why the method didn’t work for some scripts. For now, consider a simple method that allows us to transliterate text from (some) Brahmi-based scripts to others."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html",
    "href": "posts/panchanga-tantra/panchanga_tantra.html",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "",
    "text": "Figure 1: Kala Chakra"
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#foreword",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#foreword",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "0. Foreword",
    "text": "0. Foreword\n\n20th Anniversary Edition (2023)\nThis is a “20th anniversary edition” of a thesis I wrote in 2002 for the Undergraduate Research Opportunities Programme (UROP), as part of my mathematics minor in the National University of Singapore. This is also a word-for-word republishing of the thesis, but with updates to embed graphics and tables within the text. All errors (if any) are mine, and have existed for 20+ years.\nFor the longest time, this thesis was up on my then supervisor, Dr Helmer Aslaksen’s website at the Mathematics Department’s webpage. During this time, a great many had downloaded the PDF, but very few presumably understood it. For, this undergrad thesis found it its way to websites talking about dark magic and other related mystical concepts. Probably they got confused with the “tantra” in the title. Didn’t help that I made this mystical-looking, but perfectly scientific, graphic alluding to kaala chakra’s that would presumably sound woo-woo to unsuspecting audiences. Incidentally, I just re-did this graphic (Figure 1) to more exacting design standards, and perhaps would warrant another detailed explanation.\nDr Aslaksen returned to Oslo many many moons ago (pun intended). His old webpage at NUS’ website was still active for many years later, but now that it too has gone, I’m now back on the Internet to say this: nothing tantric about it. I was just punning between the Sanskrit terms ‘panchatantra’ and ‘panchangam’. In fact, this is all mathematic exploration and research, by way of Vedanga Jyotisa, Surya Siddhanta, and modelling all of those principles in Java and LISP. This is me doing that roots thing but via math. This is me claiming expertise in Indic, Chinese and Islamic calendars, of being able to tell when Chinese New Year and Deepavali can fall. Akshay researching kshaya months, if you will. That is all there is to it. Magical, but no black magic.\nThere is one literary conceit, though.\n\n\nSecond Edition (2002)\nThe fable of Apara Ganita and the Mystical Garden of Enchanted Numbers is obviously fictional. The inspiration is Leelavati Ganitam, a chapter in the ancient mathematical treatise, the Siddhanta Siromani, written by Bhaskaracharya in 1150 CE. The Leelavati Ganitam is fascinating not only for its treatment of indeterminate analysis and a method to solve Pell’s Equation, but also, as a Canadian university’s website on mathematical history puts it(University 2002), for its poetic conversation between the narrator and a narratee named Leelavati. The similarity between this poetic construct and the conversation between Apara Ganita and the dwara palika is probably noticeable.\nFrame stories are not common for scientific research papers, but they certainly have a historical precedent."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#prologue-the-mystical-garden-of-enchanted-numbers",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#prologue-the-mystical-garden-of-enchanted-numbers",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "1. Prologue: The Mystical Garden of Enchanted Numbers",
    "text": "1. Prologue: The Mystical Garden of Enchanted Numbers\nOnce upon a time, in the magical mystical city of Suvarnapuri1, there lived a student called Apara Ganita2. Apara Ganita was virtuous and devoted to his sciences. Having spent considerable amount of time learning the shastras from his guru, he was surprised when one day his guru called him up. “You have performed well, O sishya⁴ mine”, the guru said, “but the time has now come for you to take leave”.\nApara Ganita was at once sad, for he had learned a lot under him. But he remained quiet and continued listening to his guru.\n“Listen, Apara Ganita, I shall now tell you something that my guru told me when I finished my studies. For, a study in Ganita Sastra (mathematics) is not complete, unless one visits the Mystical Garden of Enchanted Numbers”\n“You must go and find this place for your education to be truly complete”.\nAnd so Apara Ganita went about searching for this place. Indeed, after much travelling and searching, he was finally shown the way to the Mystical Garden of Enchanted Numbers.\nAnd lo, what a beautiful sight it was! For it was situated in the midst of a lush green valley, saddled by mountains on either side. Down there, Apara Ganita could see famous mathematicians expositing their theories and skills, like hawkers on a bazaar street. There was Euclid standing on a rectangle, explaining the beauty of the Golden Ratio in classic Greco Caldean architecture. Pythagoras was standing next to him as a part of the Greek exhibit, explaining the virtues of a right-angled triangle to a curious crowd. From the far end of the Orator’s Corner, Zhao Jun Qing looked at Pythagoras and smiled. He was himself holding a right-angled triangle and was explaining his proof for the Pythagoras’ Theorem. Mandelbrot was decorating the Garden with flowers of fractallate beauty. John Nash was close by; he was pointing at a group of women, probably explaining game theory to onlookers around him. In another corner of the garden, (Sector 1729), Srinivasa Ramanujan was vociferously arguing a point with Thomas Hardy.\nIt was such an environment that Apara Ganita wanted to enter.\nHowever, as he was about to enter through the great doors guarding the garden, he heard a sonorous voice calling out his name.\nHe stopped and turned around to see who was calling him only to saw a young woman coming towards him. With eyes burning with curiosity and a voice sweeter than a nightingale, she said:\n  O Student Erudite,\n  What is it that you study tonight?\nJust what I needed, a mystical dwara palika (female door keeper), he said to himself. Shaking his head in wry amusement, he looks at the books in his hand and takes a deep breath to begin his dissertation."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#sthaana-prakarana-how-the-calendar-is-different-in-different-regions",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#sthaana-prakarana-how-the-calendar-is-different-in-different-regions",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "2. Sthaana Prakarana: How the calendar is different in different regions",
    "text": "2. Sthaana Prakarana: How the calendar is different in different regions\nIn a sonorous voice, the dwara palika said,\n      In order to ascertain your dissertation’s veracity,\n      can I hear you talk about the calendar’s regional complexity?\nTo which Apara Ganita listened to the multitudes of voices in the Garden, and replied thus:\nProbably the easiest way to classify Indian calendars is by the region of usage. It must be reiterated though, that such an exercise might be misleading. The classification is indeed not watertight; all calendars are intrinsically inter-linked with one another. A flowchart of the various Indian calendars and the links between them can be seen below (Figure 2).\n\n\n\nFigure 2: Indic Calendar System as a quasi-UML diagram\n\n\nWith this caveat, we’ll now traverse India on a calendrical vehicle of sorts. In particular, we try to ascertain the following elements in each region’s calendrical practices: - * Basis of the Calendar * Local Variation * When does the year begin? * Era Followed\nWe’ll find the following calendars defined with these metrics: -\n\n2.1 The Southern Amaanta Calendar\nThe Southern Amaanta Lunisolar Calendar is predominantly followed in the South and South-West Indian states of Andhra Pradesh, Karnataka and Maharashtra. It is essentially a lunisolar one; i.e., its days and months are calculated based on the motions of the moon. Like the Chinese calendar, the month is calculated from new moon to new moon. It however, differs from the Chinese calendar in that the lunar day (“thithi”) of the new moon is considered the last day of the previous month. Again, as in the Chinese calendar, a leap month, an adhika maasa, is added to the calendar every 2.7 years on an average to offset the disparity in lengths between the lunar year and the sidereal year. In addition, a month, the kshaya maasa, is occasionally subtracted. This is discussed in a later segment.\nThe Southern Amaanta Calendar differs from the Western Amaanta Calendar in its treatment of kshaya maasas, the New Year Day and the Era followed. We believe that the Southern Amaanta Calendar follows the Southern School for treating kshaya maasas. Saha and Lahiri suggest that it follows the Salivahana Saka Era starting with Chaitra Sukla Pratipada (Chakravarty and Chatterjee 1985, 304), the lunar day after the last new moon before Mesha Sankranti. The years are also named according to the names of the Jovian years (Southern School (Saha and Lahiri 1992, 270)). The Eras and handling of kshaya maasas will be discussed in detail in their respective segments.\n\n\n2.2 Western Amaanta Calendar\nAs already mentioned, we believe it’s important to distinguish between the Amaanta calendar practised in South and West India. In West India, specifically, in the state of Gujarat, the Amaanta calendar is of two forms(Chakravarty and Chatterjee 1985, 304), one that starts with Aashaadha (followed in the Kathiawar region) and one that starts with Kartika (followed all throughout Gujarat). Both calendars follow the Vikrama Era and both also possibly follow the North Western School for kshaya months.\n\n\n2.3 Purnimaanta Calendar\nThe Purnimaanta Calendar is followed in most of North India, i.e., in the states of Bihar, Himachal Pradesh, Uttar Pradesh, Haryana, Punjab, Jammu and Kashmir and Rajasthan (Chatterjee 1988, 42). (Earlier literature fails to mention Uttaranchal, Chattisgarh, Jharkhand and Delhi, but they are off-shots of bigger states and would necessarily follow the same calendar). The last of the three Indian lunisolar calendars, this one differs from the Amaanta calendar in that the months are reckoned from full moon to full moon. Therefore, the Purnimaanta calendar starts two weeks before the Amaanta calendar does; that is, it starts with the lunar day after the last full-moon before Mesha Sankranti. The Vikrama Era is followed (Chakravarty and Chatterjee 1985, 305), along with the Northern School of Jovian-year names (Saha and Lahiri 1992, 270).\n\n\n2.5 The Malayali Calendar\nWe now come to the list of Solar Calendars. The Malayali Calendar is predominantly followed in the South Indian state of Kerala. It is essentially a solar calendar; as we shall see later, the months are defined according to the raasis. The year starts with the Simha Sankranti and follows the Kollam Era.(Chakravarty and Chatterjee 1985, 304) The month begins on the same day as a Sankranti if it occurs before aparahna, i.e., three-fifths of a day. Otherwise, it begins on the next day.\n\n\n2.6 Tamil Calendar\nThe Tamil calendar is followed in Tamil Nadu. This calendar is also solar; the month begins on the same day as a Sankranti if it occurs before sunset (Chatterjee 1988, 14). The Kali Era is followed along with the Southern Jovian cycle. One peculiarity about the Tamil calendar is that its month names start with Chittirai(Chatterjee 1988, 9) (Chaitra).\n\n\n2.7 Bengali Calendar\nThe Bengali calendar is predominantly followed in West Bengal, Assam and Tripura. The Era is the Bengali San. The rule for the beginning of the month is again different; the month begins on the day after a Sankranti, if it occurs before midnight. Otherwise, it begins on the third day. (Chatterjee 1988, 14)\n\n\n2.8 Oriya Calendar\nThe Oriya calendar is followed in the Eastern state of Orissa. In addition to the Bengali San, the Saka, Vilayati and Amli eras are followed. (Saha and Lahiri 1992, 258) The month begins on the same day as that of the respective Sankranti. (Chatterjee 1988, 14)\n\n\n2.9 The Nanakshahi Calendar\nPromulgated in 1998 CE, the Nanakshahi Calendar is followed in Punjab. It’s intrinsically linked to the Gregorian calendar, except in its usage of the Nanakshahi Era.(Purewal 2002)\n\n\n2.10 National Calendar of 1957\nProposed by the Calendar Reform Committee of 1952 and promulgated in 1957 CE, the National Calendar is a tropical calendar with fixed lengths of days and months. However, because it was totally different from the traditional calendars, it did not find much acceptance. (Chatterjee 1988, 18)\nWe may thus summarize Indian calendars thus:\n\n\n\n\nTable 1: Various Indic Calendars\n\n\n\nState\nCalendar\nEra\nNew Year\nFurther Local Variation\n\n\n\n\n0\nAndhra Pradesh\nSouthern Amaanta\nSalivahana Saka, Jovian cycle (Southern School)\nOne day after the last new moon before Mesha Sankranti\nPossible Jugma month for kshaya\n\n\n1\nAssam\nSolar\nKali, Bengali San\nSolar Day after Mesha Sankranti\nBengali rules for beginning of month\n\n\n2\nBihar\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last full moon before Mesha Sankranti\n\n\n\n3\nChattisgarh\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last full moon before Mesha Sankranti\n\n\n\n4\nDelhi\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last full moon before Mesha Sankranti\n\n\n\n5\nGoa\nSouthern Amaanta\nSalivahana Saka, Jovian cycle (Southern School)\nOne day after the last new moon before Mesha Sankranti\nPossible Jugma month for kshaya\n\n\n6\nGujarat\nWestern Amaanta\nVikrama Karthikaadi\nOne day after Deepavali\nNorth-western school for kshaya possible\n\n\n7\nHimachal Pradesh\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last full moon before Mesha Sankranti\n\n\n\n8\nJammu and Kashmir\nPurnimaanta\nSaptarishi, Laukika\nOne day after the last full moon before Mesha Sankranti\n\n\n\n9\nJharkhand\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last full moon before Mesha Sankranti\n\n\n\n10\n(Kathiawar)\nWestern Amaanta\nVikrama Aashaadhadi\nAshaadha S 1\nNorth-western school for kshaya possible\n\n\n11\nKarnataka\nSouthern Amaanta\nSalivahana Saka, Jovian cycle (Southern School)\nOne day after the last new moon before Mesha Sankranti\nPossible Jugma month for kshaya\n\n\n12\nKerala\nSolar\nKollam Era\nSimha Sankranti\n1)    Kerala rules for beginning of month\n\n\n\n\n\n\n\n2) Months named after raasis\n\n\n13\nMadhya Pradesh\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last new moon before Mesha Sankranti\n\n\n\n14\nMaharashtra\nSouthern Amaanta\nSalivahana Saka, Jovian cycle (Southern School)\nOne day after the last new moon before Mesha Sankranti\nPossible Jugma month for kshaya\n\n\n15\nOrissa\nSolar\nSaka, Vilaayati, Aamli, Bengali San\nMesha Sankranti\n\n\n\n16\nPunjab\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last new moon before Mesha Sankranti\n\n\n\n17\nPunjab – Nanakshahi\nSidereal; fixed relative to Gregorian calendar\nNanakshahi\n14th March\nUses traditional names for Punjabi months\n\n\n18\nRajasthan\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last new moon before Mesha Sankranti\n\n\n\n19\nTamil Nadu\nSolar\nKali, Jovian cycle (Southern School)\nMesha Sankranti\n\n\n\n20\nTripura\nSolar\nKali, Bengali San\nSolar Day after Mesha Sankranti\nBengali rules for beginning of month\n\n\n21\nUttaranchal\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last new moon before Mesha Sankranti\n\n\n\n22\nUttar Pradesh\nPurnimaanta\nVikrama Era (Chaitradi)\nOne day after the last new moon before Mesha Sankranti\n\n\n\n23\nWest Bengal\nSolar\nKali, Bengali San\nSolar Day after Mesha Sankranti\nBengali rules for beginning of month\n\n\n\n\n\n\nDo note that: 1. The table is not exhaustive terms of calendars nor in terms of states. Among others, Arunachal Pradesh, Manipur, Meghalaya, Mizoram, Nagaland and Sikkim were left out. 2. Chatterjee mentions that the Orissa School for deciding the beginning of the solar month is also used in Punjab and Haryana “where the solar calendar is also used”. (Chatterjee 1988, 14)"
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#maasa-naamakarana-how-the-months-got-their-names.",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#maasa-naamakarana-how-the-months-got-their-names.",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "3. Maasa Naamakarana: How the Months got their Names.",
    "text": "3. Maasa Naamakarana: How the Months got their Names.\nListening to this, she said,\n      Since we are deep in this game,\n      Might I ask how each month got its name?\nTo which Apara Ganita stared at a gulmohar flower with twenty-seven buds and replied thus:\nThe complexity of the Indian calendar system is not just in the plethora of calendars available, but also in the manner in which they link up with one another. A principal point of linkage of most Indian calendars is in their names of the months; as we shall see, the similar sets of month names are used in more than one calendar. In this section, we aim to formulate rules determining the naming of the months. Our motivation is not just taxonomic; month names, we shall see, are critical to understanding the Indian calendar system.\nWe propose that there are two types of month names: -\n\n3.1 Months named after Nakshatras\nThe set of month names named after nakshatras is used by both solar and lunisolar calendars, adding to seeming complexity of the Indian calendar system. Indeed, as we shall see, this type should actually called as ‘Months initially named after Nakshatras’; there has been an infusion of solar rules into an essentially lunar convention.\nLet us then, first consider the original rule. Saha and Lahiri mention that pakshas or fortnights were differentiated based on the nakshatra “where the moon is full”.(Saha and Lahiri 1992, 221) That is to say, if a particular full moon occurs near, say, the lunar asterism, Visakha, the full moon would be called as Vaisakha Purnimaasi, and the month would be Vaisakha. The earliest lunisolar months, then, were purnimaanta, that is, the name of the full moon corresponded to the name of the month. Of course, the full moon occurs at all nakshatras. Fifteen were taken into account for naming of the month, spaced more or less equally.\nWe thus have the following set of names along with their respective nakshatras(Saha and Lahiri 1992, 221):\n\n\n\n\nTable 2: Nakshtras and Months\n\n\n\nNakshatra on Purnima\nMonth Name\n\n\n\n\n0\nChitra\nChaitra\n\n\n1\nVisakha\nVaisakha\n\n\n2\nJyestha\nJyaistha\n\n\n3\n(Purva & Uttara) Aashaadha\nAashaadha\n\n\n4\nSravana\nSraavana\n\n\n5\n(Uttara & Purva) Bhaadrapada\nBhaadrapada\n\n\n6\nAsvini\nAsvayuja (Aasvina)\n\n\n7\nKrittika\nKaarthika\n\n\n8\nMrugasira\nMaarghasira\n\n\n9\nPushyami\nPausa (Pushyam)\n\n\n10\nMaghaa\nMaagha\n\n\n11\n(Uttara and Purva) Phalguni\nPhalguna\n\n\n\n\n\n\nIt may be noted that the months of Aashaadha, Bhadrapada and Phalguna are linked to two nakshatras respectively. Chatterjee and Chakravarthy give the following criteria for choosing nakshatras for month names(Chakravarty and Chatterjee 1985, 281):\n\nThe yogataaras or the identifying stars of the nakshatras are prominent or have traditional significance.\nThey are spaced equidistant from one another.\n\nIt must be mentioned that this rule is now an approximation largely due to Earth’s precession; for instance, this year’s Chitra Purnimaasi had Swati as its nakshatra. Also, possibly for historical reasons, and allowing for regional variation in pronunciation, the Oriya, Bengali, Assamese, Punjabi and Tamil solar calendars also use the same set of month names.\nTo reconcile all this, we might frame a new rule, that, the amaanta lunar month takes its number from the solar month that starts in it, but its name from the solar month in which it starts, while following the purnimaanta months in chronological order. That is to say, since Chitra occurred during the purnima of this year’s first purnimaanta month, we call this month as ‘Chaitra’. Consequently, the first amaanta month would also be ‘Chaitra’, which also would be the name of the solar month during which the amaanta ‘Chaitra’ started. However, the ‘number’ of the solar month (‘1’ in the case of amaanta and purnimaanta Chaitra) is not quite the same; the solar Chaitra is the last (i.e., 12th) month of the year. The lunisolar Chaitra’s number is taken by the solar month that begins in it, namely the solar Vaisakha. All this can be seen in the graphic in the next page.\nThe relationships for all the months may be mapped according to the following table (Chakravarty and Chatterjee 1985, 280) (Punjabi month names (Purewal 2002)):\n\n\n\n\nTable 3: Raasis and Months in various parts of India\n\n\n\nRaasi\nApproximate Nakshatra on Purnima\nLunar Month Name\nSolar Month Name\nAssamese Version\nTamil Version\nPunjabi Version\n\n\n\n\n0\nMesha\nChitra\nChaitra\nVaisakha\nBahag\nChittarai\nVaisakh\n\n\n1\nVrshava\nVisakha\nVaisakha\nJyaishta\nJeth\nVaikasi\nJeth\n\n\n2\nMithuna\nJyestha\nJaishta\nAashaadha\nAhar\nAani\nHarh\n\n\n3\nKarkata\n(Purva & Uttara) Ashaadha\nAashaadha\nSraavana\nSaon\nAadi\nSawan\n\n\n4\nSimha\nSravana\nSraavana\nBhaadrapada\nBhad\nAavani\nBhadon\n\n\n5\nKanya\n(Purva & Uttara) Bhaadrapada\nBhaadrapada\nAsvayuja (Aasvina)\nAhin\nPurattaasi\nAsu\n\n\n6\nTula\nAsvini\nAsvayuja (Aasvina)\nKaarthika\nKati\nArppisi\nKatik\n\n\n7\nVrischika\nKrittika\nKaarthika\nMaarghasira\nAghon\nKarthigai\nMaghar\n\n\n8\nDhanus\nMrugasira\nMaarghasira\nPushyam (Pausa)\nPuha\nMaargali\nPoh\n\n\n9\nMakara\nPushyami\nPushyam (Pausa)\nMaagha\nMagh\nThaai\nMagh\n\n\n10\nKumbha\nMaagha\nMaagha\nPhalguna\nPhagun\nMaasi\nPhagun\n\n\n11\nMina\n(Uttara & Purva) Phalguni\nPhalguna\nChaitra\nChait\nPanguni\nChet\n\n\n\n\n\n\nThe Assamese, Punjabi and Tamil versions have been provided to give an idea of the linguistic variation. It is also interesting to observe that the National Calendar suggested by Saha and Lahiri also uses the same set of month names, increasing the potential confusion. As is probably obvious by now, the rule does not correspond to the Tamil, National and Nanakshahi calendars.\n\n\n3.2 Months named after Raasis\nOnly solar months share their names with raasis. SK Chatterjee and Apurba Kumar Chakravarthy give the following names along with the associated raasis(Chakravarty and Chatterjee 1985, 280):\n\n\n\n\nTable 4: Malayalam months named after raasis\n\n\n\nRaasi\nSanskritised Version\nMalayalam Version\n\n\n\n\n0\nMesha\nMesha\nMedam\n\n\n1\nVrshava\nVrshava\nEdavam\n\n\n2\nMithuna\nMithuna\nMidhunam\n\n\n3\nKarkata\nKarkata\nKaritaka\n\n\n4\nSimha\nSimha\nChingam\n\n\n5\nKanya\nKanya\nKanni\n\n\n6\nTula\nTula\nThulam\n\n\n7\nVrischika\nVrischika\nVrischikam\n\n\n8\nDhanus\nDhanus\nDhanu\n\n\n9\nMakara\nMakara\nMakaram\n\n\n10\nKumbha\nKumbha\nKumbham\n\n\n11\nMina\nMina\nMinam\n\n\n12\n\n\n\n\n\n\n\n\n\nThat is to say, the month shares its name with that of its corresponding Sankranti. For instance, if Mesha Sankranti occurs on a certain day, then the period until the next Sankranti would be Mesha maasa (Medham maasam).\nThis naming rule is followed primarily in the Malayalam calendar. Incidentally, Abhayankar says that the Oriya calendar also follows this rule. (Abhayankar 1993, 55)"
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#parva-dina-nirnaya-how-the-days-of-festivals-are-decided.",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#parva-dina-nirnaya-how-the-days-of-festivals-are-decided.",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "4. Parva Dina Nirnaya: How the days of festivals are decided.",
    "text": "4. Parva Dina Nirnaya: How the days of festivals are decided.\nHearing him speak, she asked,\n      The cultural complexity is interesting,\n      but perhaps you have a festivals listing?\nTo which Apara Ganita looked at birds chirping and replied thus:\nWe provide a list of Indian festivals, along with their (Indic) dates and the calendar used to reckon the particular festival. The list of festivals is by no means exhaustive; the entries are mostly public holidays in India.\n\n\n\n\nTable 5: Various Indic Festivals (Chatterjee 1988, 60–68)\n\n\n\nFestival\nIndic Date\nAdditional Rules\nCalendar Used\n\n\n\n\n0\nMakara Sankranti/ Pongal\nMakara Sankranti\n\nSolar\n\n\n1\nMaha Siva Raatri\nMagha K 14\nMust cover a nisita\nLunisolar\n\n\n2\nHoli\nPhalguna Purnima\nHolika Dahana is observed on the night of the Purnima; Holi is observed on the solar day after Holika Dahana.\nLunisolar\n\n\n3\nUgadi / Gudi Padwa\nChaitra S 1\n\nLunisolar\n\n\n4\nRama Navami\nChaitra S 9\nMust cover Madyahna\n\n\n\n5\nTamil New Year, Vishu, Bengali New Year\nMesha Sankranti\nRespective Sankranti rules\nSolar\n\n\n6\nGanesh Chaturti\nBhadrapada S 4\nMust cover Madyahna\nLunisolar\n\n\n7\nBuddha Purnima\nVaisakhi Purnima\n\nLunisolar\n\n\n8\nRaksha Bandan\nSravana Purnima\n\nLunisolar\n\n\n9\nJanmashtami\nSravana K 8\n\nLunisolar\n\n\n10\nOnam\nMoon is in Sravana nakshatra in Solar Bhadrapada\n\nLunisolar and Solar\n\n\n11\nMahanavami (Sivasri Sarma 2002)\nAsvayuja S 9\n(Mahanavami is reckoned before the other 8 days of Dussehra)\nLunisolar\n\n\n12\nVijayadasami (Sivasri Sarma 2002)\n(The thithi after Mahanavami)\nMust cover a Nisita\nLunisolar\n\n\n13\nDeepavali\nAsvayuja Amavasya\nMust cover pradosha\nLunisolar\n\n\n\n\n\n\nA bit of explanation is necessary. First, the terms. “Nisita” is defined to be a time- period measured by two ghatikas (1/60th of a solar day; approximately 20 minutes) stretching on either side of midnight. “Pradosha” is the time-period stretching for two muhurtas (1/15th of the time between sunrise and sunset; approximately 1 hour 36 minutes) after sunset. “Madhyahna” is one-third of the time-period between sunrise and sunset. This fraction covers mid-day.\nSecond, these dates are valid only on non-intercalary thithis for all lunisolar festivals. Both leap days and non-leap days in leap months are deemed unfit for festivals. (Kshaya maasas are not an issue here because a) jugma months are deemed fit for religious observance and b) in the Eastern and Northwestern schools, the extra intercalary month is deemed to be normal).\nAnd finally, if the given thithi doesn’t cover the given time, or covers the given time on two solar days, then the second solar day is reckoned to be the respective festival."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#samvad-sandesha-how-eras-come-into-play",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#samvad-sandesha-how-eras-come-into-play",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "5. Samvad Sandesha: How Eras come into play",
    "text": "5. Samvad Sandesha: How Eras come into play\nPerceiving the response, she questioned:\n      I do not know if this is an important part,\n      but from when do all calendars start?\nTo which Apara Ganita looked at a foundation stone and replied thus:\nThe Indian calendar system follows a wide range of eras, some of historical interest. Also, we do not attempt to link individual calendars to eras, for the same calendar may be reckoned with two different eras in two different places.\nHere’s the listing:\n\n\n\n\nTable 6: Various Indic Eras (Saha and Lahiri 1992, 252–58)\n\n\n\nEra\nZero Year\nBeginning of Era with respect to individual year\n\n\n\n\n0\nSaka\n78 CE\nMesha Sankranti, Chaitra S 1\n\n\n1\nVikrama\n57 CE\nMesha Sankranti, Chaitra S 1, Karthika S 1, Ashadha S 1\n\n\n2\nKali\n3101 BCE\nMesha Sankranti, Chaitra S 1\n\n\n3\nKollam\n824 CE\nKanya Sankranti, Simha Sankranti\n\n\n4\nBengali San\n963 + solar years since 1556 CE\nMesha Sankranti\n\n\n\n\n\n\nIn addition, some regions also name their years according to the names of the Jovian years. Saha and Lahiri point out that there are two schools for this; the Southern school names its years in continuous succession, while the Northern school names its years corresponding to the present Jovian year. (Saha and Lahiri 1992, 272)"
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#kshaya-sutra-how-certain-months-are-dropped",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#kshaya-sutra-how-certain-months-are-dropped",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "6. Kshaya Sutra: How certain months are dropped",
    "text": "6. Kshaya Sutra: How certain months are dropped\nObserving the reaction, she enquired:\n      To calendars you seem an active saakshya 3,\n      but from when do all calendars start?\nTo which, Apara Ganita looked at some fallen leaves and replied thus:\nOne of the most interesting aspects of the Indian lunisolar calendar is its kshaya maasas, literally “decayed months”. Occasionally, certain months are dropped from the lunisolar calendar. We now try to understand the modalities behind this omission; we try to answer how, why, when and where it happens.\nFirst, let us try to define a kshaya month. Chatterjee, in his work on Indian calendars, says that a certain lunar month “may completely overlap any of the short three nirayana solar months of Margasira, Pausha and Magha”, with the result that there will be no new moon in the respective solar month. Consequently, there will be no lunar month named “after […] this solar month”. (Chatterjee 1988, 34) This interaction may be visualized in Figure 1.\nWe learn the following from this statement:  1. That the solar months of Margasira, Pausa and Magha are small, 2. That at a certain time, there might be no new moon in these months, and 3. The corresponding lunar month is dropped from the calendar.\nNote that Chatterjee is silent on whether the dropped lunar month is amaanta or purnimaanta; a naïve assumption would be that since he talks about new moons, the month would be amaanta. But a study of the (Chaitradi) amaanta and purnimaanta calendars for the present year reveals that the difference between these two calendars is still two weeks. Therefore, it’s safe to conclude that kshaya months were dropped from the purnimaanta calendar as well.\nMoreover, the statement about “corresponding lunar month” is unclear; are we talking about the lunar month with the same number as the new-moon-lacking solar month? Or are we talking about the lunar month with the same name of the solar month? Running the calendrica code provided by Dershowitz and Reingold with their book Calendrical Calculations - The Millenium Edition (see table for values), we see that it is the lunar month with the same name that gets dropped.\nTo account for a purnimaanta kshaya, and to further clarify which month to drop, we re-phrase the definition of a kshaya month to be thus:\n\n“In any given lunar year, if two consecutive Sankrantis occur between two consecutive new moons, then the lunar month, whether amaanta or purnimaanta, with the same name as the solar month in which this occurs, is dropped.”\n\nAs we shall see, such a re-phrasing is useful for computational purposes.\nIndeed, as we mentioned earlier, we ran the Dershowitz and Reingold’s calendrica package to get values for the occurrence of a kshaya month. Since searching for a kshaya month is computationally very heavy(Dershowitz and Reingold 2002, 24), we used a table prepared by Saha and Lahiri (table 22 in the book)(Saha and Lahiri 1992, 250) as a starting point. We also tabulated results for non- kshaya months, specifically years with gaps of 19, 46, 65, 76, 122 and 141 years respectively. The results and the graphs from these results are tabulated in Table 8.\nIt must be noted that all cases tabulated previously have been calculated according to Surya Siddhantic rules and that we may get a different set of results if calculated according to ephemeris calculations. Indeed, as Chatterjee has pointed out, there was a difference in 1964 CE; ephemeris calculations showed Margasira to be kshaya (and Karthika, Chaitra to be adhika), while as we’ve seen, Surya Siddhantic computation showed Pausa to be kshaya (and Asvina and Chaitra to be adhika) (Chatterjee 1988, 38) Chatterjee, however, seems to be in agreement with Dershowitz and Reingold in saying that there was a kshaya in Magha in 1983 CE (Deshowitz and Reingold 2001, 269), despite his use of ephemeris calculations.\nWhat do we get from all this? We see that a kshaya month can occur every 19, 46, 65, 76, 122 or 141 years. Indeed, Saha and Lahiri’s tabulation provide us with the following frequencies of occurrences for gaps between kshaya months (Saha and Lahiri 1992, 250):\n\n\nTable 7: Number of times a particular interval gap occurred\n\n\nInterval\nNumber of times occuring\n\n\n\n\n19\n11\n\n\n46\n3\n\n\n65\n1\n\n\n76\n1\n\n\n122\n1\n\n\n141\n6\n\n\n\n\nWe therefore see that between 525 CE and 1985 CE, kshaya occurred 11 times with a gap of 19 years, thrice with a gap of 46 years, six times with a gap of 141 years, and once each with gaps of 65, 76 and 122 years. The obvious question one would like to ask would be why. Why does kshaya occur only in these gaps?\nTo answer this better, we re-iterate what causes kshaya in the first place. We already said that a kshaya would occur when two consecutive Sankrantis occur between two Amavasyas. That is to say, when a solar month is shorter in length than, and is completely enclosed by, a (an Amaanta) lunar month. Saha and Lahiri go on to say that the “maximum duration of a lunar month exceeds the lengths of the solar months only in the case of Margasira, Pausa and Magha” (Saha and Lahiri 1992, 250) and that, therefore, kshaya is possible only in these months.\nThis would explain the solar month part, but what of lunar? How can the lunar month be bigger than the solar month? Ala’a Juwad has some answers; in his article, he suggests that the canonical synodic month, a lunar month between two consecutive phases of the moon, is not constant in length. Indeed, he goes on to say that between 1600 and 2400 CE, the synodic month extends in length from 29 days 6 hours and 31 minutes to 29 days 19 hours and 59 minutes. (Jawad 1993, 76) Moreover, he says that the “longest lunar months … occur when the date of the new Moon coincides with apogee”.(Jawad 1993, 76) A brute-force search for the longest synodic month definitely won’t give us a kshaya; for kshaya to occur, the lunar month needs to be only bigger than its solar counterpart and more importantly, completely encompass it. Indeed, Jawad says that the longest synodic month occurred in 1610 CE, a year which occurs within the 141 year long kshaya hiatus between 1540–1541 CE and 1680–81 CE.\nWe therefore search for other clues to unscramble kshaya. On a purely arithmetic perspective, we observe the following: -\n19 = 19 * 1\n46 = 19 * 2 + 8\n65 = 19 * 3 + 8\n76 = 19 * 4\n122 = 19 * 6 + 8\n141 = 19 * 7 + 8\nIs it possible then, that the kshaya month has something to do with the Metonic cycle? The Metonic Cycle is a fairly well documented phenomenon; first observed by the Greek astronomer Metos, every 19 years, the lunar dates overlap with the tropical ones. The underlying mathematical reason is simple: 19 sidereal years contain 19*365.242189 = 6939.6 solar days, while 235 synodic months (with a mean of 29.53 solar days) contain 235*29.530588853 = 6939.68 solar days. The lengths overlap. But this obviously is neither necessary nor sufficient; it might be useful for the dates to repeat, but it definitely does not fulfil the requirement for kshaya.\nOne suggestion therefore, might be that the kshaya occurs when the number of solar days of a sidereal year is equal to that of a synodic month, which in turn is equal to that from an anomalistic month. An anomalistic month is defined to be the time - period between two consecutive perigee passages and has a mean value of 27.55455 days. Taking these average values, we calculate the average values of solar days in whole numbers of synodic and anomalistic months: -\n\n\n\n\n\n\n\n\n\n\n\n\nInterval\nOccurrence\nModulo\nSolar Year\nSynodic Months\nAnomalistic Months\nCanonical Kshaya Year\n\n\n\n\n19\n11\n1*19\n6939.601591\n6939.68838\n6943.7466\nKshaya\n\n\n27\n0\n1*19+8\n9861.539103\n9863.216677\n9864.5289\n\n\n\n38\n0\n2*19\n13879.20318\n13879.37676\n13887.4932\n\n\n\n46\n3\n2*19+8\n16801.14069\n16802.90506\n16808.2755\nKshaya\n\n\n57\n0\n3*19\n20818.80477\n20819.06514\n20831.2398\n\n\n\n65\n1\n3*19+8\n23740.74229\n23742.59344\n23752.0221\nKshaya\n\n\n76\n1\n4*19\n27758.40636\n27758.75352\n27774.9864\nKshaya\n\n\n84\n0\n4*19+8\n30680.34388\n30682.28182\n30695.7687\n\n\n\n95\n0\n5*19\n34698.00796\n34698.4419\n34718.733\n\n\n\n103\n0\n5*19+8\n37619.94547\n37621.9702\n37639.5153\n\n\n\n114\n0\n6*19\n41637.60955\n41638.13028\n41634.92505\n\n\n\n122\n1\n6*19+8\n44559.54706\n44561.65858\n44555.70735\nKshaya\n\n\n133\n0\n7*19\n48577.21114\n48577.81866\n48578.67165\n\n\n\n141\n6\n7*19+8\n51499.14865\n51501.34696\n51499.45395\nKshaya\n\n\n\nBroadly speaking, we might summarize the above table as thus: - for the most part, the number of solar days in solar years, synodic and anomalistic months overlap in kshaya years. However, this overlap doesn’t occur only in kshaya years; as the table shows, there’s an overlap for 133 years as well. Does this, then, explain the kshaya phenomenon? We might summarize it as being strongly suggestive, but definitely not conclusive.\n\n6.1 Treatment of Kshaya Months\nWe may complete our discussion of kshaya months by describing the three Kshaya Schools of thought. (Chatterjee 1988, 37–40)\nThe North Western School is followed in the north-western part of the country, presumably in Gujarat and/ or Rajasthan, where the lunisolar calendar is used. Essentially, the North Western School treats the adhika month before kshaya as a normal month and the one after the kshaya month to be intercalary.\nThis contrasts with the Eastern School where the reverse is followed; the adhika month before the kshaya is deemed intercalary, while the one after it is deemed normal. The Eastern School is followed in the eastern parts of the country, where the lunisolar calendar is followed.\nThe final of the trio, the Southern School, treats both adhika maasas as intercalary, instead reckoning the kshaya month as a “jugma”, i.e., the first half of the thithi of this month is deemed to be that of the first month, and the second half as that of the second month. This is presumably followed in the Southern parts of the country where the lunisolar calendar is followed."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#epilogue",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#epilogue",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "7. Epilogue",
    "text": "7. Epilogue\nBy this time, onlookers all sides gathered around the two. They were attentively listening to the conversation between them. Along with Apara Ganita, they were waiting for the dwara palika to ask once again. But she didn’t. She stood and smiled. Her face was radiant, glowing like the moon on a Purnima and the harsh summer sun entering the Mithuna raasi.\nShe still said nothing. She got up and walked away from the crowd. Still smiling. Still graceful.\nThe sparks came slowly, but suddenly. All around them, the landscape was changing. The gate was melting into the walls, the walls into the ground. The ground was changing into grass, the grass covering the entire ground.\nExcept the ground underneath Apara Ganita. He found himself standing on an elevated podium, facing listeners all around him, all waiting to hear him speak.\nFor once, he didn’t know what to say."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#references",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#references",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "8. References",
    "text": "8. References\n\n\nAbhayankar, KD. 1993. “Our Debts to Our Ancestors.” In Treasures of Ancient Indian Astronomy, edited by KD Abhayankar and Dr. BG Sidharth. Ajanta Publications, Delhi.\n\n\nChakravarty, Apurba Kumar, and SK Chatterjee. 1985. “Indian Calendar from Post-Vedic Period to AD 1900.” In History of Astronomy in India. Indian National Science Academy.\n\n\nChatterjee, SK. 1988. Indian Calendric System. Publications Division, Ministry of Information; Broadcasting, Government of India.\n\n\nDershowitz, Nachum, and Reingold. 2002. Calendar Tabulations - 1900 to 2200. Cambridge University Press.\n\n\nDeshowitz, Nachum, and Edward M Reingold. 2001. Calendrical Computations: The Millennium Edition. Cambridge Univeristy Press, Cambridge.\n\n\nJawad, Ala’a H. 1993. “How Long Is a Lunar Month?” Sky and Telescope.\n\n\nPurewal, Pal Singh. 2002. “Nanakshahi Samat.” 2002. http://www.sikh.net/sikhism/Nanakshahi.htm.\n\n\nSaha, MH, and NC Lahiri. 1992. Report of the Calendar Reform Committee. Council of Scientific; Industrial Research, New Delhi.\n\n\nSivasri Sarma, Madugula. 2002. “Interview by Author.” Hyderabad, India.\n\n\nUniversity, Simon Fraser. 2002. “Bhaskaracharya.” 2002. http://www.math.sfu.ca/histmath/India/12thCenturyAD/Bhaskara.html."
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#appendix",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#appendix",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "9. Appendix",
    "text": "9. Appendix\n\n\n\n\nTable 8: Sankranti and Amavasya timings from Margasira, Pausa, Magha and Phalguna for various years.\n\n\n\nIndic Solar (Saka Era)\nGregorian (CE)\nIndic Lunar (Vikrama Era)\nLeap Month?\nLeap Day?\nSankranti\nAmavasya\n\n\n\n\n0\n1237/8/1\n1315/11/6\n1372/8/1\nFalse\nFalse\n07:50:07.603\n05:47:04.872\n\n\n1\n1237/9/1\n1315/12/5\n1372/8/30\nFalse\nFalse\n19:36:46.043\n19:48:11.479\n\n\n2\n1256/9/1\n1334/12/5\n1391/8/30\nFalse\nFalse\n17:36:21.429\n11:17:01.381\n\n\n3\n1256/10/1\n1335/1/3\n1391/9/30\nFalse\nFalse\n01:14:16.038\n03:48:04.528\n\n\n4\n1302/8/1\n1380/11/5\n1437/8/30\nTrue\nFalse\n03:29:37.170\n02:34:46.447\n\n\n5\n1302/9/1\n1380/12/5\n1437/8/30\nFalse\nFalse\n15:16:26.115\n21:15:12.204\n\n\n6\n1321/9/1\n1399/12/6\n1456/8/30\nFalse\nFalse\n13:16:01.519\n07:32:11.950\n\n\n7\n1321/10/1\n1400/1/4\n1456/9/30\nFalse\nFalse\n20:53:56.115\n00:39:59.510\n\n\n8\n1397/10/1\n1476/1/6\n1532/9/30\nFalse\nFalse\n12:52:28.218\n11:39:20.696\n\n\n9\n1397/11/1\n1476/2/4\n1532/10/30\nFalse\nFalse\n23:36:42.517\n00:05:00.597\n\n\n10\n1443/8/1\n1521/11/9\n1578/8/30\nTrue\nFalse\n15:07:49.331\n14:22:17.756\n\n\n11\n1443/9/1\n1521/12/8\n1578/8/29\nFalse\nTrue\n02:54:38.328\n09:59:51.334\n\n\n12\n1462/9/1\n1540/12/8\n1597/8/30\nFalse\nFalse\n00:54:13.716\n17:36:31.986\n\n\n13\n1462/10/1\n1541/1/7\n1597/9/30\nFalse\nFalse\n08:32:08.341\n12:29:37.136\n\n\n14\n1603/9/1\n1681/12/10\n1738/9/1\nFalse\nFalse\n12:32:25.884\n05:14:33.480\n\n\n15\n1603/10/1\n1682/1/8\n1738/9/30\nFalse\nFalse\n20:10:20.531\n01:11:37.994\n\n\n16\n1744/9/1\n1822/12/13\n1879/8/30\nFalse\nFalse\n00:10:27.526\n17:52:00.161\n\n\n17\n1744/9/1\n1822/12/13\n1879/8/30\nFalse\nFalse\n00:10:27.526\n17:52:00.161\n\n\n18\n1744/10/1\n1823/1/12\n1879/9/30\nFalse\nFalse\n07:48:32.677\n13:46:57.632\n\n\n19\n1744/10/1\n1823/1/12\n1879/9/30\nFalse\nFalse\n07:48:32.677\n13:46:57.632\n\n\n20\n1763/9/1\n1841/12/13\n1898/9/1\nFalse\nFalse\n22:10:02.920\n02:02:04.954\n\n\n21\n1763/10/1\n1842/1/11\n1898/9/30\nFalse\nFalse\n05:48:08.110\n20:30:22.804\n\n\n22\n1763/11/1\n1842/2/10\n1898/10/30\nFalse\nFalse\n16:32:11.852\n16:06:10.978\n\n\n23\n1763/12/1\n1842/3/12\n1898/11/30\nFalse\nFalse\n12:14:30.094\n10:53:27.932\n\n\n24\n1790/9/1\n1868/12/13\n1925/09/30\nFalse\nFalse\n21:50:32.239\n06:09:24.227\n\n\n25\n1790/10/1\n1869/1/11\n1925/10/29\nFalse\nFalse\n05:28:37.402\n23:17:43.494\n\n\n26\n1790/11/1\n1869/2/10\n1925/11/29\nFalse\nFalse\n16:12:41.144\n18:05:11.108\n\n\n27\n1790/12/1\n1869/3/12\n1925/12/29\nFalse\nFalse\n11:54:48.881\n13:00:01.825\n\n\n28\n1809/9/1\n1887/12/14\n1944/09/30\nFalse\nFalse\n19:50:18.190\n00:36:07.304\n\n\n29\n1809/10/1\n1888/1/12\n1944/10/29\nFalse\nFalse\n03:28:12.797\n13:35:00.591\n\n\n30\n1809/11/1\n1888/2/11\n1944/11/30\nFalse\nFalse\n14:12:16.539\n04:16:12.013\n\n\n31\n1809/12/1\n1888/3/12\n1944/12/30\nFalse\nFalse\n09:54:34.781\n20:22:28.399\n\n\n32\n1820/9/1\n1898/12/14\n1955/09/01\nFalse\nFalse\n19:50:18.190\n00:36:07.304\n\n\n33\n1820/10/1\n1899/1/12\n1955/10/01\nFalse\nFalse\n23:46:54.268\n04:05:28.667\n\n\n34\n1820/11/1\n1899/2/11\n1955/11/01\nFalse\nFalse\n10:31:08.567\n14:31:57.701\n\n\n35\n1820/12/1\n1899/3/12\n1955/12/01\nFalse\nFalse\n06:13:16.303\n00:51:14.516\n\n\n36\n1866/9/1\n1944/12/15\n2001/09/30\nFalse\nFalse\n13:49:04.331\n19:41:30.672\n\n\n37\n1866/10/1\n1945/01/13\n2001/10/29\nFalse\nFalse\n21:27:09.517\n10:16:11.944\n\n\n38\n1866/11/1\n1945/02/12\n2001/11/30\nFalse\nFalse\n08:11:13.259\n22:40:48.473\n\n\n39\n1866/12/1\n1945/03/13\n2001/12/29\nFalse\nFalse\n03:53:20.996\n09:06:03.927\n\n\n40\n1885/9/1\n1963/12/16\n2020/09/01\nFalse\nFalse\n11:48:39.726\n06:32:25.892\n\n\n41\n1885/9/1\n1963/12/16\n2020/09/01\nFalse\nFalse\n11:48:39.726\n06:32:25.892\n\n\n42\n1885/10/1\n1964/01/14\n2020/09/30\nFalse\nFalse\n19:26:34.354\n01:20:25.252\n\n\n43\n1885/10/1\n1964/01/14\n2020/09/30\nFalse\nFalse\n19:26:34.354\n01:20:25.252\n\n\n44\n1885/11/1\n1964/02/12\n2020/11/29\nFalse\nFalse\n06:10:38.096\n17:47:57.629\n\n\n45\n1885/12/1\n1964/03/13\n2020/12/29\nFalse\nFalse\n01:52:56.390\n07:20:04.127\n\n\n46\n1904/10/01\n1983/01/14\n2039/09/30\nFalse\nFalse\n17:26:09.739\n09:03:57.421\n\n\n47\n1904/11/01\n1983/02/12\n2039/10/30\nFalse\nFalse\n04:10:13.481\n04:45:33.318"
  },
  {
    "objectID": "posts/panchanga-tantra/panchanga_tantra.html#footnotes",
    "href": "posts/panchanga-tantra/panchanga_tantra.html#footnotes",
    "title": "Panchanga Tantra: The Magic of the Indic Calendar System",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSuvrnapuri = City of Gold↩︎\nApara Ganita = One with a lot of mathematical talent.↩︎\nsaakshya = witness (in Sanskrit)↩︎"
  },
  {
    "objectID": "archive/నమస్కారం/టపా.html",
    "href": "archive/నమస్కారం/టపా.html",
    "title": "తెలుగులో టపాలు",
    "section": "",
    "text": "తెలుగు దేల యన్న దేశంబు తెలుగేను.\nమా తెలుగు తల్లికి మల్లె పూదండ. మా కన్న తల్లికి మంగాళ హారతులు.\n\n\nహవాయి భౌగోళిక పరిస్థితి\nఇప్పుడు పేసిఫిక్ మహా సముద్రములోని హవాయి దీవుల గురించి తెలుసుకుందాము. ముఖ్యంగా వాటి భౌగోళిక పరిస్థితి: భూగోళం అంతటికీ అత్యంత సుదీర్ఘమయిన ద్వీప సమూహం హవాయి. ఈ ద్వీప సమూహంలో ఎనిమిది ద్వీపాలు ఉన్నాయి. ఈ ద్వీప సమూహం మొత్తం పొడవు 2400 కిలోమీటర్లు. కిలియా అగ్నిపర్వతపు లావా ప్రవాహాల వలన ఈ ద్వీపాల వైశాల్యం ఎప్పటికప్పుడు పెరుగుతూనే ఉంది. ఈస్టర్ ద్వీపాన్ని మినహాయిస్తే ప్రధాన భూభాగాలకు అత్యంత దూరంగా ఉన్న ద్వీపం ఇది. తనలోని ప్రత్యేక భౌగోళిక స్థితిగతుల వలన వైవిధ్యభరితమయిన వృక్ష, జీవజాతులకు హవాయి నెలవయ్యింది. హవాయిలో ఎన్నో దీవులు ఉండగా, అతి పెద్ద దీవులలో ఏడవ స్థానంలో నిహావు దీవి (Figure 1) ఉన్నది. ఫోటోలో నిర్మానుషంగా కనిపించినా, ఈ దీవిని రోబిన్ సన్ కుటుంబం రెండు తరాల క్రితం కేవలం $10,000కే కొనేసింది.\n\n\n\nFigure 1: నిహావు"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Akshay. Yes, the name of this blog is a pun on my name. I like dad-jokes and I can’t lie.\nBy day, I craft strategy through data for a prominent airlines. I used to be a consultant 10+ years back, and then for a while, as a civil-servant. Switched to the data-science/ AI space in 2019, starting with power-plant networks, and now aviation since 2021.\nBy night, I often wonder how tech, culture and society intersect. My exploration in LLM’s partially comes from that angle. Aiming to be more literary or linguistic , if you will.\nI have a bachelors degree Computing from National University of Singapore, MBA (Strategy) from Nanyang Business School & an ongoing MS in Analytics from Georgia Tech. My LinkedIn profile goes into more detail.\nI speak five languages - English, తెలుగు, دکھنی (दक्खिनी), Français and Español. Wife and daughter speak three more: Mandarin, Hokkien and Japanese. Will blog in at least two.\nI don’t speak for my current employer. You’ll be nuts to buy or sell stocks based on what I write here."
  }
]